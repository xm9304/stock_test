# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\Project\外包\20230107_通信达数据处理\main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import (QMainWindow, QPushButton, QApplication,
                             QWidget, QMessageBox)
from PyQt5.QtCore import QObject, QThread, pyqtSignal, QCoreApplication
from parse_data import ParseData

class WorkerThread(QObject):
    def __init__(self,  tdx_path, path, from_date, to_date):
        super().__init__()
        self.tdx_path = tdx_path
        self.path = path
        self.from_date = from_date
        self.to_date = to_date

    def run(self):
        """Long-running task."""
        t = ParseData(self.tdx_path, self.path, self.from_date, self.to_date)
        t.handle_data()
        QThread.currentThread().quit()


# ! 重写QMainWindow类的closeEvent方法,实现关闭主窗口的同时关闭所有子窗口
class RQMainWindow(QMainWindow):
    def __init__(self, parent=None):
        super(RQMainWindow, self).__init__(parent)

    def closeEvent(self, event):
        os._exit(0)


class Ui_MainWindow(RQMainWindow):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(587, 515)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(70, 130, 101, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(450, 140, 81, 31))
        self.pushButton.setObjectName("pushButton")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(70, 210, 191, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(150, 140, 281, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(250, 210, 181, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.textEdit_2.setFont(font)
        self.textEdit_2.setObjectName("textEdit_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(70, 290, 191, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.textEdit_3 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_3.setGeometry(QtCore.QRect(250, 290, 181, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.textEdit_3.setFont(font)
        self.textEdit_3.setObjectName("textEdit_3")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(200, 360, 161, 41))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(450, 70, 81, 31))
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(70, 60, 101, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.textEdit_4 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_4.setGeometry(QtCore.QRect(150, 70, 281, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.textEdit_4.setFont(font)
        self.textEdit_4.setObjectName("textEdit_4")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.pushButton.clicked.connect(self.msg)
        self.pushButton_3.clicked.connect(self.msg2)
        self.pushButton_2.clicked.connect(self.start_catch)

    def on_thread_finished(self):
        QMessageBox.information(self, '提示', '分析完成')
        self.pushButton_2.setText('开始分析')
        self.pushButton_2.setEnabled(True)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "保存地址："))
        self.pushButton.setText(_translate("MainWindow", "选择文件夹"))
        self.label_2.setText(_translate("MainWindow", "开始日期（yyyyMMdd）"))
        self.label_3.setText(_translate("MainWindow", "结束日期（yyyyMMdd）"))
        self.pushButton_2.setText(_translate("MainWindow", "开始分析"))
        self.pushButton_3.setText(_translate("MainWindow", "选择文件夹"))
        self.label_4.setText(_translate("MainWindow", "数据文件："))

    def msg(self):
        m = QtWidgets.QFileDialog.getExistingDirectory(None, "选取文件夹","C:/")  # 起始路径
        self.textEdit.setText(m)

    def msg2(self):
        m = QtWidgets.QFileDialog.getExistingDirectory(None, "选取文件夹","C:/")  # 起始路径
        self.textEdit_4.setText(m)

    def start_catch(self):
        if self.textEdit_3.toPlainText().strip() == '':
            QMessageBox.information(self, '提示', '下载地址不能为空')
            return
        if self.textEdit.toPlainText().strip() == '':
            QMessageBox.information(self, '提示', '地址不能为空')
            return
        if int(self.textEdit_2.toPlainText()) >= int(self.textEdit_3.toPlainText()):
            QMessageBox.information(self, '提示', '输入的时间有误')
            return
        self.thread = QThread()
        self.worker = WorkerThread( self.textEdit_4.toPlainText(), self.textEdit.toPlainText(), self.textEdit_2.toPlainText(), self.textEdit_3.toPlainText())
        self.worker.moveToThread(self.thread)
        self.thread.started.connect(self.worker.run)
        self.thread.finished.connect(self.on_thread_finished)
        self.thread.start()
        self.pushButton_2.setText('分析中')
        self.pushButton_2.setEnabled(False)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
